// Generated by view binder compiler. Do not edit!
package com.dmribeiro87.cupcakeapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.dmribeiro87.cupcakeapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentDetailsBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final Button btAddCart;

  @NonNull
  public final CardView cvFlavour;

  @NonNull
  public final ConstraintLayout cvPrice;

  @NonNull
  public final ImageView ivCupcake;

  @NonNull
  public final TextView labelFlavour;

  @NonNull
  public final TextView tvDescription;

  @NonNull
  public final TextView tvFlavour;

  @NonNull
  public final TextView tvPrice;

  private FragmentDetailsBinding(@NonNull NestedScrollView rootView, @NonNull Button btAddCart,
      @NonNull CardView cvFlavour, @NonNull ConstraintLayout cvPrice, @NonNull ImageView ivCupcake,
      @NonNull TextView labelFlavour, @NonNull TextView tvDescription, @NonNull TextView tvFlavour,
      @NonNull TextView tvPrice) {
    this.rootView = rootView;
    this.btAddCart = btAddCart;
    this.cvFlavour = cvFlavour;
    this.cvPrice = cvPrice;
    this.ivCupcake = ivCupcake;
    this.labelFlavour = labelFlavour;
    this.tvDescription = tvDescription;
    this.tvFlavour = tvFlavour;
    this.tvPrice = tvPrice;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bt_add_cart;
      Button btAddCart = ViewBindings.findChildViewById(rootView, id);
      if (btAddCart == null) {
        break missingId;
      }

      id = R.id.cv_flavour;
      CardView cvFlavour = ViewBindings.findChildViewById(rootView, id);
      if (cvFlavour == null) {
        break missingId;
      }

      id = R.id.cv_price;
      ConstraintLayout cvPrice = ViewBindings.findChildViewById(rootView, id);
      if (cvPrice == null) {
        break missingId;
      }

      id = R.id.iv_cupcake;
      ImageView ivCupcake = ViewBindings.findChildViewById(rootView, id);
      if (ivCupcake == null) {
        break missingId;
      }

      id = R.id.label_flavour;
      TextView labelFlavour = ViewBindings.findChildViewById(rootView, id);
      if (labelFlavour == null) {
        break missingId;
      }

      id = R.id.tv_description;
      TextView tvDescription = ViewBindings.findChildViewById(rootView, id);
      if (tvDescription == null) {
        break missingId;
      }

      id = R.id.tv_flavour;
      TextView tvFlavour = ViewBindings.findChildViewById(rootView, id);
      if (tvFlavour == null) {
        break missingId;
      }

      id = R.id.tv_price;
      TextView tvPrice = ViewBindings.findChildViewById(rootView, id);
      if (tvPrice == null) {
        break missingId;
      }

      return new FragmentDetailsBinding((NestedScrollView) rootView, btAddCart, cvFlavour, cvPrice,
          ivCupcake, labelFlavour, tvDescription, tvFlavour, tvPrice);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
